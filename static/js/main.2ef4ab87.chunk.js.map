{"version":3,"sources":["logo.svg","Components/navbar.js","Components/searchcategories.js","Components/recipedescription.js","Components/recipecard.js","Components/categories.js","Data/data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledNavBar","styled","nav","StyledA","a","Navbar","name","href","StyledSearchBar","div","StyledDiv","SearchCategory","prop","categories","id","map","category","index","key","onClick","console","log","RecipeDesc","props","children","RecipeCard","useState","isClicked","changeClicked","recipe","description","StyledCategory","StyledCatTitle","h1","Category","recipes","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oKAAAA,EAAOC,QAAU,IAA0B,kC,6fCG3C,IAAMC,EAAeC,IAAOC,IAAV,KAUZC,EAAUF,IAAOG,EAAV,KAOE,SAASC,IACpB,OACI,kBAACL,EAAD,CAAcM,KAAK,OACf,kBAACH,EAAD,CAASI,KAAK,QAAd,kB,wTCpBZ,IAAMC,EAAkBP,IAAOQ,IAAV,KASfC,EAAYT,IAAOQ,IAAV,KAKA,SAASE,EAAeC,GAAO,IAEnCC,EAAcD,EAAdC,WAEP,OACI,kBAACL,EAAD,CAAiBM,GAAG,aACfD,EAAWE,KAAI,SAAUC,EAAUC,GAChC,OACI,kBAACP,EAAD,CAAWQ,IAAKD,EAAOE,QAAS,WAC5BC,QAAQC,IAAIL,EAASV,QAErB,4BAAKU,EAASV,W,WCzBvB,SAASgB,EAAWC,GACnC,OACI,6BACKA,EAAMC,UCFA,SAASC,EAAWF,GAAO,IAAD,EAEFG,oBAAS,GAFP,mBAE9BC,EAF8B,KAEnBC,EAFmB,KAI9BC,EAAUN,EAAVM,OAEP,OACI,yBAAKV,QAAS,WACVS,GAAeD,KAEf,4BACKE,EAAOvB,MAEXqB,GAAa,kBAACL,EAAD,KACTO,EAAOC,c,kPCdxB,IAAMC,EAAiB9B,IAAOQ,IAAV,KAOduB,EAAiB/B,IAAOgC,GAAV,KAIL,SAASC,EAASX,GAAO,IAE7BY,EAAiBZ,EAAjBY,QAAS7B,EAAQiB,EAARjB,KAEhB,OACI,kBAACyB,EAAD,KACI,kBAACC,EAAD,KACK1B,GAEJ6B,EAAQpB,KAAI,SAAUc,EAAQZ,GAC3B,OACI,kBAAC,EAAD,CAAYY,OAAUA,EAAQX,IAAOD,QC1B1C,OACX,CAACX,KAAM,OAAQ6B,QAAS,CAAC,CAAC7B,KAAM,QAASwB,YAAY,WAAY,CAACxB,KAAM,OAAQwB,YAAY,WAAY,CAACxB,KAAM,gBAAiBwB,YAAY,WAAY,CAACxB,KAAM,YAAawB,YAAY,aACxL,CAACxB,KAAM,UAAW6B,QAAS,CAAC,CAAC7B,KAAM,cAAewB,YAAY,WAAY,CAACxB,KAAM,eAAgBwB,YAAY,WAAY,CAACxB,KAAM,gBAAiBwB,YAAY,WAAY,CAACxB,KAAM,gBAAiBwB,YAAY,aAC7M,CAACxB,KAAM,MAAO6B,QAAS,CAAC,CAAC7B,KAAM,kBAAmBwB,YAAY,WAAY,CAACxB,KAAM,UAAWwB,YAAY,YAAa,CAACxB,KAAM,gBAAiBwB,YAAY,YAAa,CAACxB,KAAM,oBAAqBwB,YAAY,cAC9M,CAACxB,KAAM,QAAS6B,QAAS,CAAC,CAAC7B,KAAM,sBAAuBwB,YAAY,YAAa,CAACxB,KAAM,UAAWwB,YAAY,YAAa,CAACxB,KAAM,sBAAuBwB,YAAY,YAAa,CAACxB,KAAM,cAAewB,YAAY,cACrN,CAACxB,KAAM,aAAc6B,QAAS,CAAC,CAAC7B,KAAM,eAAgBwB,YAAY,YAAa,CAACxB,KAAM,2BAA4BwB,YAAY,YAAa,CAACxB,KAAM,iBAAkBwB,YAAY,YAAa,CAACxB,KAAM,+BAAgCwB,YAAY,eCgBrOM,MAZf,WACE,OACC,6BACI,kBAAC/B,EAAD,MACA,kBAACM,EAAD,CAAgBE,WAAYA,IAC3BA,EAAWE,KAAI,SAAUC,EAAUC,GAC/B,OAAO,kBAACiB,EAAD,CAAU5B,KAAMU,EAASV,KAAM6B,QAASnB,EAASmB,QAASjB,IAAKD,SCH9DoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlC,QAAQkC,MAAMA,EAAMC,c","file":"static/js/main.2ef4ab87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledNavBar = styled.nav`\r\n  overflow: hidden;\r\n  background-color: #000000;\r\n  position: fixed; \r\n  top: 0;\r\n  width: 100%; \r\n  height: 95px;\r\n  text-align: center;\r\n    `;\r\n\r\nconst StyledA = styled.a`\r\n  text-decoration: none;\r\n  color: #FFFFFF;\r\n  font-size: 4em;\r\n  font-family: Sansita Swashed;\r\n`;\r\n\r\nexport default function Navbar(){\r\n    return(\r\n        <StyledNavBar name=\"top\">\r\n            <StyledA href=\"#top\">Cooking Buddy</StyledA>\r\n        </StyledNavBar>\r\n    )\r\n}","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledSearchBar = styled.div`\r\ncolor: #ffffff;\r\nmargin-top: 95px;\r\ndisplay: flex;\r\njustify-content: space-around;\r\ntext-align: center;\r\npadding-bottom: 46vh;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\nbackground-color: #282c34;\r\nwidth: 20%; \r\n`;\r\n\r\nexport default function SearchCategory(prop) {\r\n\r\n    const {categories} = prop;\r\n\r\n    return (\r\n        <StyledSearchBar id=\"searchBar\">\r\n            {categories.map(function (category, index) {\r\n                return (\r\n                    <StyledDiv key={index} onClick={function() {\r\n                        console.log(category.name)\r\n                    }}>\r\n                        <h1>{category.name}</h1>\r\n                    </StyledDiv>\r\n                )\r\n            })}\r\n        </StyledSearchBar>\r\n    )\r\n}","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\n\r\nexport default function RecipeDesc(props) {\r\nreturn(\r\n    <div>\r\n        {props.children}\r\n    </div>\r\n)\r\n}","import React, {useState} from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport RecipeDesc from \"./recipedescription\";\r\n\r\nexport default function RecipeCard(props){\r\n\r\n    const [isClicked, changeClicked] = useState(false)\r\n\r\n    const {recipe} = props\r\n\r\n    return(\r\n        <div onClick={function () {\r\n            changeClicked(!isClicked)\r\n        }}>\r\n            <h2>\r\n                {recipe.name}\r\n            </h2>\r\n            {isClicked && <RecipeDesc>\r\n                {recipe.description}\r\n            </RecipeDesc>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport Recipecard from \"./recipecard\";\r\n\r\nconst StyledCategory = styled.div`\r\nbackground-color: #282c34;\r\nwidth: 100%; \r\nmargin-top: 10vh;\r\ncolor: #ffffff;\r\n`;\r\n\r\nconst StyledCatTitle = styled.h1`\r\ntext-align: center;\r\n`;\r\n\r\nexport default function Category(props){\r\n\r\n    const {recipes, name} = props\r\n\r\n    return(\r\n        <StyledCategory>\r\n            <StyledCatTitle>\r\n                {name}\r\n            </StyledCatTitle>\r\n            {recipes.map(function (recipe, index) {\r\n                return(\r\n                    <Recipecard recipe = {recipe} key = {index} />\r\n                )\r\n            })}\r\n        </StyledCategory>\r\n    )\r\n}","export default [\r\n    {name: \"Beef\", recipes: [{name: \"Steak\", description:\"Filler1\"}, {name: \"Ribs\", description:\"Filler2\"}, {name: \"Beef Sandwich\", description:\"Filler3\"}, {name: \"Hamburger\", description:\"Filler4\"}]},\r\n    {name: \"Chicken\", recipes: [{name: \"Fried Wings\", description:\"Filler5\"}, {name: \"Chicken soup\", description:\"Filler6\"}, {name: \"Chicken Katsu\", description:\"Filler7\"}, {name: \"Buffalo wings\", description:\"Filler8\"}]},\r\n    {name: \"Egg\", recipes: [{name: \"Hard-boiled egg\", description:\"Filler9\"}, {name: \"Omlette\", description:\"Filler10\"}, {name: \"Scrambled egg\", description:\"Filler11\"}, {name: \"Sunny-side-up egg\", description:\"Filler12\"}]},\r\n    {name: \"Pasta\", recipes: [{name: \"Spaghetti Bolognese\", description:\"Filler13\"}, {name: \"Lasagna\", description:\"Filler14\"}, {name: \"Macaroni and cheese\", description:\"Filler15\"}, {name: \"Tagliatelle\", description:\"Filler16\"}]},\r\n    {name: \"Vegetarian\", recipes: [{name: \"Ceasar salad\", description:\"Filler17\"}, {name: \"Roasted carrot and beets\", description:\"Filler18\"}, {name: \"Vegetable soup\", description:\"Filler19\"}, {name: \"Cauliflower & roast potato's\", description:\"Filler20\"}]},\r\n]\r\n","import React from 'react';\nimport styled from \"@emotion/styled\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from \"./Components/navbar\";\nimport SearchCategory from \"./Components/searchcategories\";\nimport Category from \"./Components/categories\";\nimport categories from \"./Data/data.js\";\n\nfunction App() {\n  return (\n   <div>\n       <Navbar />\n       <SearchCategory categories={categories} />\n       {categories.map(function (category, index) {\n            return <Category name={category.name} recipes={category.recipes} key={index} />\n       })}\n   </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}